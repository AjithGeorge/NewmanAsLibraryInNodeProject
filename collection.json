{
	"info": {
		"_postman_id": "6d3fefd1-65dc-4650-af48-99a10ef5cd4e",
		"name": "SampleCollection",
		"description": "To demonstrate the various capabilities of newman as a library",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24100718"
	},
	"item": [
		{
			"name": "f1",
			"item": [
				{
					"name": "PostmanEcho-t1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get?foo1=bar1&foo2=bar2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "foo1",
									"value": "bar1"
								},
								{
									"key": "foo2",
									"value": "bar2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "f2",
			"item": [
				{
					"name": "PostmanEcho-t2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get?foo1=bar1&foo2=bar2",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "foo1",
									"value": "bar1"
								},
								{
									"key": "foo2",
									"value": "bar2"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Test will fail, deliberately set that way to check the retry functionality"
		},
		{
			"name": "f3",
			"item": [
				{
					"name": "f4",
					"item": [
						{
							"name": "PostmanEcho-t3/4",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://postman-echo.com/get?foo1=bar1&foo2=bar2",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"get"
									],
									"query": [
										{
											"key": "foo1",
											"value": "bar1"
										},
										{
											"key": "foo2",
											"value": "bar2"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Nested folder"
		}
	]
}